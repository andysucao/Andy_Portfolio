<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Retrieval-Augmented Generation (RAG) on Andy Cao</title>
    <link>https://andysucao.github.io/Andy_Portfolio/tags/retrieval-augmented-generation-rag/</link>
    <description>Recent content in Retrieval-Augmented Generation (RAG) on Andy Cao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Aug 2023 06:09:00 -0400</lastBuildDate>
    <atom:link href="https://andysucao.github.io/Andy_Portfolio/tags/retrieval-augmented-generation-rag/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project 10: Build a Chatbot with LangChain and Chroma to chat with your own documents</title>
      <link>https://andysucao.github.io/Andy_Portfolio/post/project-10/</link>
      <pubDate>Sun, 20 Aug 2023 06:09:00 -0400</pubDate>
      <guid>https://andysucao.github.io/Andy_Portfolio/post/project-10/</guid>
      <description>1. Overview In this project, we will build a Retrieval-Augmented Generation Chatbot with the help of LangChain that can answer questions from internal documentation and have memory. By using Panelâ€™s chat interface, we will also build a LangChain-powered AI chatbot for our RAG application.&#xA;The Python Notebook containing the complete model development process and the data used in this project can be found at Google Drive.&#xA;2. LangChain LangChain is an open-source developer framework for building LLM applications.</description>
    </item>
    <item>
      <title>Project 9: Generative QA with Retrieval-Augmented Generation (RAG) and TruEra Evaluation</title>
      <link>https://andysucao.github.io/Andy_Portfolio/post/project-9/</link>
      <pubDate>Sun, 20 Aug 2023 06:08:00 -0400</pubDate>
      <guid>https://andysucao.github.io/Andy_Portfolio/post/project-9/</guid>
      <description>1. Overview In this project, we will build a Generative Question Answering model with Retrieval-Augmented Generation (RAG) with the help of LlamaIndex that can answer questions from internal documentation. We will also evaluate, iterate, and improve the model by using TruLens.&#xA;The Python Notebook containing the complete model development process and the data used in this project can be found at Google Drive.&#xA;2. Retrieval-Augmented Generation (RAG) for Question Answering (QA) In the first part of this section, we will discuss the basic RAG pipeline for generative Question Answering from internal documentation.</description>
    </item>
  </channel>
</rss>
